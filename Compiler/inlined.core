data $Empty.0 = 1()
data $Cons.0 = 0(head, tail)
data $Int.0 = Int(x)
data $Bool.0 = Bool(x)
$prime.0 = 
    \<$x.0> -> let rec 
         in 
        $take.0 ($x.0) ($sieve.0 ($from.0 ($Int.0 (2))))

$.0 = 
    \<$.0> -> case ($prime.0 ($Int.0 ($.0))) as $.0 of {
        Int($.0) -> $.0
    }

$nonMultiple.0 = 
    \<$p.0> -> \<$n.0> -> let rec 
         in 
        case (\<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
            Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
                Int($y.0) -> case ({% I32Eq | $y.0, $x.0 %}) as $r.0 of {
                    _ -> $Bool.0 ($r.0)
                }
            }
        } (\<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
            Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
                Int($y.0) -> case ({% I32Mul | $y.0, $x.0 %}) as $r.0 of {
                    _ -> $Int.0 ($r.0)
                }
            }
        } (\<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
            Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
                Int($y.0) -> case ({% I32DivS | $y.0, $x.0 %}) as $r.0 of {
                    _ -> $Int.0 ($r.0)
                }
            }
        } ($n.0) ($p.0)) ($p.0)) ($n.0)) as $.0 of {
            Bool($.0) -> case ($.0) as $.0 of {
                _ -> $Bool.0 (0)
                0 -> $Bool.0 (1)
            }
        }

$filter.0 = 
    \<$predicate.0> -> \<$list.0> -> let rec 
         in 
        let join 
            $.0 = \<$.0> -> _|_ in 
            case ($list.0) as $.1 of {
                _ -> $.0 ($.1)
                0($head.0, $tail.0) -> let join 
                    $.0 = \<$.0> -> let join 
                        $.1 = \<$.1> -> let rec 
                            $rest.0 = $filter.0 ($predicate.0) ($.1) in 
                            case ($predicate.0 ($.0)) as $.1 of {
                                Bool($.1) -> case ($.1) as $.1 of {
                                    _ -> $Cons.0 ($.0) ($rest.0)
                                    0 -> $rest.0
                                }
                            } in 
                        case ($tail.0) as $tail.0 of {
                            _ -> $.1 ($tail.0)
                        } in 
                    case ($head.0) as $head.0 of {
                        _ -> $.0 ($head.0)
                    }
                1() -> $Empty.0
            }

$sieve.0 = 
    \<$list.0> -> let rec 
         in 
        let join 
            $.0 = \<$.0> -> _|_ in 
            case ($list.0) as $.1 of {
                _ -> $.0 ($.1)
                0($prime.0, $tail.0) -> let join 
                    $.0 = \<$.0> -> let join 
                        $.1 = \<$.1> -> let rec 
                             in 
                            $Cons.0 ($.0) ($sieve.0 ($filter.0 ($nonMultiple.0 ($.0)) ($.1))) in 
                        case ($tail.0) as $tail.0 of {
                            _ -> $.1 ($tail.0)
                        } in 
                    case ($prime.0) as $prime.0 of {
                        _ -> $.0 ($prime.0)
                    }
                1() -> $Empty.0
            }

$from.0 = 
    \<$x.0> -> let rec 
         in 
        $Cons.0 ($x.0) ($from.0 (\<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
            Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
                Int($y.0) -> case ({% I32Add | $y.0, $x.0 %}) as $r.0 of {
                    _ -> $Int.0 ($r.0)
                }
            }
        } ($x.0) ($Int.0 (1))))

$take.0 = 
    \<$i.0> -> \<$list.0> -> let rec 
         in 
        let join 
            $.0 = \<$.0> -> _|_ in 
            case ($list.0) as $.1 of {
                _ -> $.0 ($.1)
                0($head.0, $tail.0) -> let join 
                    $.0 = \<$.0> -> let join 
                        $.1 = \<$.1> -> let rec 
                             in 
                            let join 
                                $.2 = \<$.2> -> $take.0 (\<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
                                    Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
                                        Int($y.0) -> case ({% I32Sub | $y.0, $x.0 %}) as $r.0 of {
                                            _ -> $Int.0 ($r.0)
                                        }
                                    }
                                } ($i.0) ($Int.0 (1))) ($.1) in 
                                case ($i.0) as $_.0 of {
                                    _ -> $.2 ($_.0)
                                    Int($.3) -> let join 
                                        $.4 = \<$.3> -> $.2 ($_.0) in 
                                        case ($.3) as $.5 of {
                                            _ -> $.4 ($.5)
                                            0 -> $.0
                                        }
                                } in 
                        case ($tail.0) as $tail.0 of {
                            _ -> $.1 ($tail.0)
                        } in 
                    case ($head.0) as $head.0 of {
                        _ -> $.0 ($head.0)
                    }
            }

$add.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32Add | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Int.0 ($r.0)
            }
        }
    }

$sub.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32Sub | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Int.0 ($r.0)
            }
        }
    }

$mul.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32Mul | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Int.0 ($r.0)
            }
        }
    }

$div.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32DivS | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Int.0 ($r.0)
            }
        }
    }

$equals.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32Eq | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Bool.0 ($r.0)
            }
        }
    }

$lessThan.0 = 
    \<$x_boxed.0> -> \<$y_boxed.0> -> case ($x_boxed.0) as $x_boxed.0 of {
        Int($x.0) -> case ($y_boxed.0) as $y_boxed.0 of {
            Int($y.0) -> case ({% I32LtS | $y.0, $x.0 %}) as $r.0 of {
                _ -> $Bool.0 ($r.0)
            }
        }
    }

$false.0 = 
    $Bool.0 (0)

$true.0 = 
    $Bool.0 (1)
