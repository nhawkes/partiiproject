[(IntegerConstr , TopConstr [intern_0 ]);
 (AddOp ,
  TopExpr
    (Lam
       (intern_xValue ,
        Lam
          (intern_yValue ,
           Case
             (Var intern_xValue ,gen_0 ,
              ([((DataAlt IntegerConstr , [intern_xInt ]),
                 Case
                   (Var intern_yValue ,gen_3 ,
                    ([((DataAlt IntegerConstr , [intern_yInt ]),
                       Case
                         (Prim (I32Add,[Var intern_yInt ; Var intern_xInt ]),
                          intern_rInt ,
                          ([], App (Var IntegerConstr ,Var intern_rInt ))))],
                     Unreachable)))], Unreachable))))));
 (SubOp ,
  TopExpr
    (Lam
       (intern_xValue ,
        Lam
          (intern_yValue ,
           Case
             (Var intern_xValue ,gen_7 ,
              ([((DataAlt IntegerConstr , [intern_xInt ]),
                 Case
                   (Var intern_yValue ,gen_10 ,
                    ([((DataAlt IntegerConstr , [intern_yInt ]),
                       Case
                         (Prim (I32Sub,[Var intern_yInt ; Var intern_xInt ]),
                          intern_rInt ,
                          ([], App (Var IntegerConstr ,Var intern_rInt ))))],
                     Unreachable)))], Unreachable))))));
 (work_fibonacci ,
  TopExpr
    (Lam
       (x ,
        Let
          (Rec
             [(list ,
               App
                 (App (Var Cons ,App (Var IntegerConstr ,Lit (I32 1))),
                  App
                    (App (Var Cons ,App (Var IntegerConstr ,Lit (I32 5))),
                     App
                       (App (Var Cons ,App (Var IntegerConstr ,Lit (I32 9))),
                        Var Empty ))));
              (addTwo ,
               Lam
                 (x ,
                  Case
                    (Var x ,gen_0 ,
                     ([((DataAlt IntegerConstr , [intern_xInt ]),
                        Case
                          (Prim (I32Add,[Lit (I32 2); Var intern_xInt ]),
                           intern_rInt ,
                           ([], App (Var IntegerConstr ,Var intern_rInt ))))],
                      Unreachable))));
              (mapped , App (App (Var work_map ,Var addTwo ),Var list ));
              (mapped2 , App (App (Var work_map ,Var addTwo ),Var list ));
              (mapped3 , App (App (Var work_map ,Var addTwo ),Var list ));
              (mapped4 , App (App (Var work_map ,Var addTwo ),Var list ));
              (mapped5 , App (App (Var work_map ,Var addTwo ),Var list ))],
           App
             (App (Var work_take ,App (Var IntegerConstr ,Lit (I32 0))),
              Var mapped )))));
 (fibonacci , TopExpr (Lam (x ,App (Var work_fibonacci ,Var x ))));
 (work_E_fibonacci ,
  TopExpr
    (Lam
       (x ,
        Case
          (App (Var work_fibonacci ,App (Var IntegerConstr ,Var x )),gen_14 ,
           ([((DataAlt IntegerConstr , [gen_15 ]), Var gen_15 )], Unreachable)))));
 (E_fibonacci , TopExpr (Lam (x ,App (Var work_E_fibonacci ,Var x ))));
 (work_take ,
  TopExpr
    (Lam
       (i ,
        Lam
          (list ,
           Case
             (Var list ,gen_16 ,
              ([((DataAlt Cons , [head ; tail ]),
                 Case
                   (Var i ,anon_0 ,
                    ([((DataAlt IntegerConstr , [gen_21 ]),
                       Case
                         (Var gen_21 ,gen_22 ,
                          ([((LitAlt (I32 0), []), Var head )],
                           App
                             (Case
                                (Var i ,gen_7 ,
                                 ([((DataAlt IntegerConstr , [intern_xInt ]),
                                    Case
                                      (Prim
                                         (I32Sub,[Lit (I32 1); Var intern_xInt ]),
                                       intern_rInt ,
                                       ([],
                                        Lam
                                          (list ,
                                           App
                                             (App
                                                (Var work_take ,
                                                 App
                                                   (Var IntegerConstr ,
                                                    Var intern_rInt )),Var list )))))],
                                  Unreachable)),Var tail ))))],
                     App
                       (Case
                          (Var i ,gen_7 ,
                           ([((DataAlt IntegerConstr , [intern_xInt ]),
                              Case
                                (Prim (I32Sub,[Lit (I32 1); Var intern_xInt ]),
                                 intern_rInt ,
                                 ([],
                                  Lam
                                    (list ,
                                     App
                                       (App
                                          (Var work_take ,
                                           App
                                             (Var IntegerConstr ,
                                              Var intern_rInt )),Var list )))))],
                            Unreachable)),Var tail ))))], Unreachable))))));
 (take ,
  TopExpr (Lam (i ,Lam (list ,App (App (Var work_take ,Var i ),Var list )))));
 (work_map ,
  TopExpr
    (Lam
       (f ,
        Lam
          (list ,
           Case
             (Var list ,gen_24 ,
              ([((DataAlt Cons , [head ; tail ]),
                 App (App (Var Cons ,App (Var f ,Var head )),Var tail ));
                ((DataAlt Empty , []), Var Empty )], Unreachable))))));
 (map ,
  TopExpr (Lam (f ,Lam (list ,App (App (Var work_map ,Var f ),Var list )))));
 (Empty , TopConstr []); (Cons , TopConstr [head ; tail ])]